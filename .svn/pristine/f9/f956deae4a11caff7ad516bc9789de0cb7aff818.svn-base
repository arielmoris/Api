package pt.api.player.Update;

import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public abstract class Update {
	private static String uri = "baseURI/player/update/";
	
	public static Response call(String playername, Request request){
		Field[] fields = Request.class.getDeclaredFields();
		StringBuilder sb = new StringBuilder(uri);
		for(Field field : fields){
			String name = field.getName();
			String getterName =  "get"+ name.substring(0,1).toUpperCase() + name.substring(1);
			
			try {
				Method method = Request.class.getMethod(getterName);
				Object valueObject = method.invoke(request);
				if(valueObject != null){
					sb.append(name).append("/").append(valueObject);
				}
				System.out.println(name+" => "+valueObject);
				
				
				System.out.println("Uri : "+sb.toString());
			} catch (NoSuchMethodException e) {
				e.printStackTrace();
			} catch (SecurityException e) {
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				e.printStackTrace();
			} catch (IllegalArgumentException e) {
				e.printStackTrace();
			} catch (InvocationTargetException e) {
				e.printStackTrace();
			}	
		}
		return null;
		
	}
			
}
